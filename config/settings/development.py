"""
Django settings for aries project.

Generated by 'django-admin startproject' using Django 1.10.4.

For more information on this file, see
https://docs.djangoproject.com/en/1.10/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.10/ref/settings/
"""

#settings/local.py
from . base import *
import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname('/Users/keanu/workspace/python/aries_project/base/')
LOG_DIR = os.path.dirname('/Users/keanu/workspace/python/aries_project/base/logs/')

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.10/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 't9akg1cfc(u%fo)!a95oizo)(&#ju8qqv1x&@4q-6)cynci#l1'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
LOG_PREFIX = ''

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework_swagger',
    'aries',
    'aries.common',
    'aries.products',
    'aries.users'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.10/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'aries_main',
        'USER': 'viastelle',
        'PASSWORD': 'viastelle',
        'HOST': 'rm-viastelle.mysql.rds.aliyuncs.com',
        'PORT': '3306',
    }
}


CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
        'TIMEOUT': 120
    }
}

# Password validation
# https://docs.djangoproject.com/en/1.10/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '[%(asctime)s] %(levelname)s [%(name)s:%(lineno)s] %(message)s'
        },
        'simple': {
            'format': '%(asctime)s %(levelname)s %(message)s'
        },
    },
    'handlers': {
        'console_info': {
            'level': 'INFO',
            'class': 'logging.StreamHandler',
            'formatter': 'simple',
        },
        'console_error': {
            'level': 'ERROR',
            'class': 'logging.StreamHandler',
            'formatter': 'simple',
        },
        'file_info': {
            'level': 'INFO',
            'class': 'logging.handlers.TimedRotatingFileHandler',
            'filename': os.path.join(LOG_DIR, LOG_PREFIX + '_info.log'),
            'when': 'D',
            'interval': 1,
            'backupCount': 14,
            'formatter': 'verbose',
        },
        'file_error': {
            'level': 'ERROR',
            'class': 'logging.handlers.TimedRotatingFileHandler',
            'filename': os.path.join(LOG_DIR, LOG_PREFIX + '_error.log'),
            'when': 'D',
            'interval': 1,
            'backupCount': 14,
            'formatter': 'verbose',
        },
        'mail_admins': {
            'level': 'ERROR',
            'class': 'django.utils.log.AdminEmailHandler',
        }
    },
    'loggers': {
        'django.request': {
            'handlers': ['mail_admins'],
            'level': 'ERROR',
            'propagate': False,
        },
        'products_info': {
            'handlers': ['console_info', 'file_info'],
            'level': 'INFO',
            'propagate': True,
        },
        'products_error': {
            'handlers': ['console_error', 'file_error'],
            'level': 'ERROR',
            'propagate': True,
        },
        'delivery_info': {
            'handlers': ['console_info', 'file_info'],
            'level': 'INFO',
            'propagate': True,
        },
        'delivery_error': {
            'handlers': ['console_error', 'file_error'],
            'level': 'ERROR',
            'propagate': True,
        },
        'purchases_info': {
            'handlers': ['console_info', 'file_info'],
            'level': 'INFO',
            'propagate': True,
        },
        'purchases_error': {
            'handlers': ['console_error', 'file_error'],
            'level': 'ERROR',
            'propagate': True,
        },
        'payments_info': {
            'handlers': ['console_info', 'file_info'],
            'level': 'INFO',
            'propagate': True,
        },
        'payments_error': {
            'handlers': ['console_error', 'file_error'],
            'level': 'ERROR',
            'propagate': True,
        },
        'platform_info': {
            'handlers': ['console_info', 'file_info'],
            'level': 'INFO',
            'propagate': True,
        },
        'platform_error': {
            'handlers': ['console_error', 'file_error'],
            'level': 'ERROR',
            'propagate': True,
        },
        'users_info': {
            'handlers': ['console_info', 'file_info'],
            'level': 'INFO',
            'propagate': True,
        },
        'users_error': {
            'handlers': ['console_error', 'file_error'],
            'level': 'ERROR',
            'propagate': True,
        },
        'ucc_info': {
            'handlers': ['console_info', 'file_info'],
            'level': 'INFO',
            'propagate': True,
        },
        'ucc_error': {
            'handlers': ['console_error', 'file_error'],
            'level': 'ERROR',
            'propagate': True,
        },
        'gateway': {
            'handlers': ['console', 'file'],
            'level': 'INFO',
            'propagate': True,
        },
    }
}


# Internationalization
# https://docs.djangoproject.com/en/1.10/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.10/howto/static-files/

STATIC_URL = '/static/'

